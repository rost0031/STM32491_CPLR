/**
 * @file    ClientErrorCodes.h
 * @brief   Error codes internal to the client.
 *
 * This header contains all error codes used by the client.
 *
 * @date    03/31/2015
 * @author  Harry Rostovtsev
 * @email   harry_rostovtsev@datacard.com
 * Copyright (C) 2015 Datacard. All rights reserved.
 */

/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef CLIENTERRORCODES_H_
#define CLIENTERRORCODES_H_

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _WIN32
   #ifdef BUILDING_CLIENT_DLL
   #define CLIENT_DLL __declspec(dllexport)
   #else
   #define CLIENT_DLL __declspec(dllimport)
   #endif
#else
   #define CLIENT_DLL
   #define __stdcall
#endif


#ifdef __cplusplus
}
#endif

/* Includes ------------------------------------------------------------------*/
/* Exported defines ----------------------------------------------------------*/
/* Exported macros -----------------------------------------------------------*/
/* Exported types ------------------------------------------------------------*/

/**
 * @brief Error codes that can be generated by the client
 *
 * The error code consists of a 32 bit value:
 *
 * The most significant 16 bits map to the category.
 * The least significant 16 bits map to low level errors as you see fit.
 *
 * For example:
 * Error code - 0x00000004
 * Category   - 0x0000: This is the serial communications category
 * Error      - 0x0004: This is the low level error code that the board can
 * specify.  Each category gets 0xFFFF error codes (65535) dedicated to it.
 *
 */
typedef enum ClientErrors
{
   CLI_ERR_NONE                                                = 0x00000000,

   /* Logger error category.                     0x00000001 - 0x0000FFFF */
   CLI_ERR_INVALID_CALLBACK                                    = 0x00000001,

   /* Serial error category.                     0x00010000 - 0x0001FFFF */
   CLI_ERR_SER_EXCEPTION_CAUGHT                                = 0x00010000,
   CLI_ERR_SER_MSG_BASE64_ENC_FAILED                           = 0x00010001,

   /* UDP error category.                        0x00020000 - 0x0002FFFF */
   CLI_ERR_UDP_EXCEPTION_CAUGHT                                = 0x00020000,

   /* Comm error category                        0x00030000 - 0x0003FFFF */
   CLI_ERR_COMM_NOT_SET                                        = 0x00030000,

   /* Message error category                     0x00040000 - 0x0004FFFF */
   CLI_ERR_MSG_WAITING_FOR_RESP                                = 0x00040000,
   CLI_ERR_MSG_INVALID                                         = 0x00040001,
   CLI_ERR_MSG_ACK_WAIT_TIMED_OUT                              = 0x00040002,
   CLI_ERR_MSG_DONE_WAIT_TIMED_OUT                             = 0x00040003,

   /* Memory error category                      0x00005000 - 0x0005FFFF */
   CLI_ERR_MEM_NULL_VALUE                                      = 0x00050000,
   CLI_ERR_MEM_BUFFER_LEN                                      = 0x00050001,

   /* FW loader error category                   0x00006000 - 0x0006FFFF */
   CLI_ERR_FW_FILENAME_INVALID                                 = 0x00060000,
   CLI_ERR_FW_FILENAME_INVALID_EXT                             = 0x00060001,
   CLI_ERR_FW_FILENAME_MISSING_VER                             = 0x00060002,
   CLI_ERR_FW_FILENAME_MISSING_DATETIME                        = 0x00060003,
   CLI_ERR_FW_UNABLE_TO_OPEN                                   = 0x00060004,

   /* Reserved errors                            0xFFFFFFFE - 0xFFFFFFFF */
   CLI_ERR_UNIMPLEMENTED                                       = 0xFFFFFFFE,
   CLI_ERR_UNKNOWN                                             = 0xFFFFFFFF
} ClientError_t;


/* Exported functions --------------------------------------------------------*/
/* Exported classes ----------------------------------------------------------*/

#endif                                                 /* CLIENTERRORCODES_H_ */
/******** Copyright (C) 2015 Datacard. All rights reserved *****END OF FILE****/

/**
 * @file    bsp.h
 * @brief   This file contains the "Board Support Package" functions for the
 * client.
 *
 * @date   03/23/2015
 * @author Harry Rostovtsev
 * @email  harry_rostovtsev@datacard.com
 * Copyright (C) 2015 Datacard. All rights reserved.
 *
 * @addtogroup groupBSP
 * @{
 */

/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef BSP_H_
#define BSP_H_

/* Includes ------------------------------------------------------------------*/
#include "CBCliShared.h"

/* Exported defines ----------------------------------------------------------*/
#define BSP_TICKS_PER_SEC   1000U

#ifdef WIN32COMPILE
#define WIN32_TIME_MULT       0.1
#else
#define WIN32_TIME_MULT       1
#endif

/* Exported macros -----------------------------------------------------------*/

/**
 * Convert seconds to BSP ticks used by timers in QP.
 *
 * @param  seconds: number of seconds that is desired
 * @return ticks: number of ticks to actually arm the QP timer on the client.
 */
#define SECONDS_TO_BSP_TICKS( seconds )   \
   (uint32_t)( (1.0 * seconds) * BSP_TICKS_PER_SEC * WIN32_TIME_MULT)

/* Exported types ------------------------------------------------------------*/
/* Exported constants --------------------------------------------------------*/
/* Exported functions --------------------------------------------------------*/

/**
 * @brief Initialize low level hardware for the entire system.
 *
 * @param [in] argc: number of arguments passed into main()
 * @param [in] *argv[]: list of arguments passed into main().
 *
 * @return None
 */
void BSP_init(int argc, char *argv[]);

/**
 * Terminate the QF system.  This should be done right before exit.
 *
 * @param [in] result: ?? This is not really being used.
 *
 * @return None
 */
void BSP_terminate( int16_t result );

/**
 * Initialize a random number generator with a seed.  TODO: This is currently
 * very weak and should be replaced with something considerably more secure.
 *
 * @param [in] seed: number with which to seed the random number generator.
 *
 * @return None
 */
void BSP_randomSeed( uint32_t seed );

/**
 * @brief   Get a random number
 *
 * Get the next random number generated by the very simple algorithm used.
 * TODO: This is currently very weak and should be replaced with something
 * considerably more secure.
 *
 * @param  None
 * @return None
 */
uint32_t BSP_random( void );

/**
 * @} end addtogroup groupBSP
 */

#endif                                                              /* BSP_H_ */
/******** Copyright (C) 2014 Datacard. All rights reserved *****END OF FILE****/

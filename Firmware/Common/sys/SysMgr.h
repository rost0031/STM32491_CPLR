/*****************************************************************************
* Model: SysMgr.qm
* File:  ./SysMgr_gen.h
*
* This code has been generated by QM tool (see state-machine.com/qm).
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* This program is open source software: you can redistribute it and/or
* modify it under the terms of the GNU General Public License as published
* by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
* or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
* for more details.
*****************************************************************************/
/*${.::SysMgr_gen.h} .......................................................*/
/**
 * @file    SysMgr.h
 * Declarations for functions for the SysMgr AO.  This state
 * machine handles various system level requests.
 *
 * Note: If editing this file, please make sure to update the SysMgr.qm
 * model.  The generated code from that model should be very similar to the
 * code in this file.
 *
 * @date    05/13/2015
 * @author  Harry Rostovtsev
 * @email   harry_rostovtsev@datacard.com
 * Copyright (C) 2015 Datacard. All rights reserved.
 *
 * @addtogroup groupSys
 * @{
 */

/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef SYSMGR_H_
#define SYSMGR_H_

/* Includes ------------------------------------------------------------------*/
#include "qp_port.h"                                        /* for QP support */
#include "DC3CommApi.h"              /* For API for communicating with client */
#include "DC3Signals.h"             /* For QP signals available to the system */
#include "db.h"                                    /* For DB access and types */

/* Exported defines ----------------------------------------------------------*/
/* Exported macros -----------------------------------------------------------*/
/* Exported types ------------------------------------------------------------*/

/**
 * @brief Event struct type for specifying a DB read request.
 */
/*${Events::DBReadReqEvt} ..................................................*/
typedef struct {
/* protected: */
    QEvt super;

    /**< Specifies whether the request came from FreeRTOS thread or another AO */
    AccessType_t accessType;

    /**< DB element */
    DB_Elem_t dbElem;
} DBReadReqEvt;

/**
 * @brief Event struct type for specifying a DB read request.
 */
/*${Events::DBWriteReqEvt} .................................................*/
typedef struct {
/* protected: */
    QEvt super;

    /**< Specifies whether the request came from FreeRTOS thread or another AO */
    AccessType_t accessType;

    /**< DB element */
    DB_Elem_t dbElem;

    /**< Buffer that holds the data to write */
    uint8_t dataBuf[MAX_DB_ELEM_SIZE];

    /**< Length of data in dataBuf */
    uint8_t dataLen;
} DBWriteReqEvt;

/**
 * @brief Event struct type for specifying a DB read request.
 */
/*${Events::DBReadDoneEvt} .................................................*/
typedef struct {
/* protected: */
    QEvt super;

    /**< DB element */
    DB_Elem_t dbElem;

    /**< Buffer that holds the data read from DB */
    uint8_t dataBuf[MAX_DB_ELEM_SIZE];

    /**< Length of data in dataBuf */
    uint8_t dataLen;

    /**< Status of the operation */
    DC3Error_t status;
} DBReadDoneEvt;

/**
 * @brief Event struct type for specifying a DB read request.
 */
/*${Events::DBWriteDoneEvt} ................................................*/
typedef struct {
/* protected: */
    QEvt super;

    /**< DB element */
    DB_Elem_t dbElem;

    /**< Status of the operation */
    DC3Error_t status;
} DBWriteDoneEvt;


/* Exported constants --------------------------------------------------------*/
/* Exported functions --------------------------------------------------------*/

/**
 * @brief C "constructor" for SysMgr "class".
 * Initializes all the timers and queues used by the AO and sets of the
 * first state.
 * @param  None
 * @param  None
 * @retval None
 */
/*${AOs::SysMgr_ctor} ......................................................*/
void SysMgr_ctor(void);



/**< "opaque" pointer to the Active Object */
extern QActive * const AO_SysMgr;


/**
 * @} end addtogroup groupSys
 */

#endif                                                           /* SYSMGR_H_ */
/******** Copyright (C) 2015 Datacard. All rights reserved *****END OF FILE****/
